<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.bankgroup.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="User">
        <id column="ID" jdbcType="INTEGER" property="ID"/>
        <result column="name" jdbcType="CHAR" property="name"/>
        <result column="age" jdbcType="INTEGER" property="age"/>
        <result column="sex" jdbcType="CHAR" property="sex"/>
        <result column="IDNumber" jdbcType="CHAR" property="IDNumber"/>
        <result column="phoneNumber" jdbcType="CHAR" property="phoneNumber"/>
        <result column="address" jdbcType="CHAR" property="address"/>
        <result column="email" jdbcType="CHAR" property="email"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, name, age, sex, IDNumber, phoneNumber, address, email
    </sql>
    <!--根据用户名密码查询用户信息-->
    <!--application.yml 中通过 type-aliases-package 指定了实体类的为了，因此-->
    <select id="getUserByID" resultType="User">
        select *
        from user
        where ID = #{ID,jdbcType=INTEGER}
    </select>

    <insert id="createUser" parameterType="Account">
        insert
        into user(id) values (#{ID,jdbcType=INTEGER})
    </insert>

    <update id="editUser" parameterType="User">
        UPDATE user SET name = #{name, jdbcType=CHAR}, age = #{age, jdbcType=INTEGER}, sex = #{sex, jdbcType=CHAR},
        IDNumber = #{IDNumber, jdbcType=CHAR}, phoneNumber = #{phoneNumber, jdbcType=CHAR},
        address = #{address, jdbcType=CHAR}, email = #{email, jdbcType=CHAR} where ID = #{ID, jdbcType=INTEGER}
    </update>

    <delete id="deleteUser" parameterType="Integer">
        DELETE from user WHERE ID = {ID,jdbcType=INTEGER}
    </delete>

    <select id="getAllUser" resultType="User">
        SELECT * FROM user
    </select>
</mapper>